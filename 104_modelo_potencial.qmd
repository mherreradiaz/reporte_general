# Modelado espacial diario de $\Psi_s$

## Predictores espacio-temporales

```{r}
source('script/setup.R')
library(viridisLite)
```

```{css, echo = FALSE}
.justify {
  text-align: justify !important
}
```

### Variables meteorológicas {.unnumbered}

::::: justify
Las variables meteorológicas utilizadas en el desarrollo del modelo de $\Psi_s$ se obtuvieron a partir de estaciones meteorológicas automáticas en ambos huertos, las cuales registraron datos cada 15 minutos utilizando el modelo ATMOS-41 del grupo METER. Estas variables fueron temperatura ($T$), humedad relativa ($HR$), déficit de presión de vapor ($VPD$), precipitación ($PP$) y evapotranspiración de referencia ($ET0$).

```{r}
data_clima <- read_rds('data/clima.rds') |> 
  filter(!(temporada == '2023-2024' & year(fecha) == 2023 & month(fecha) > 5),
         !month(fecha) %in% 5:9)

colores <- viridis(5, option = "viridis")
```

::: panel-tabset
#### Temperatura

```{r}
#| label: fig-temperatura
#| fig-cap: 'Variación de la temperatura media diaria (°C) del medio día en La Esperanza y Río Claro durante las temporadas 2022-2023 y 2023-2024.'
#| fig-width: 11.5
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_clima |>
  ggplot(aes(fecha, t_media, color = sitio)) +
  geom_line(linewidth = .8, alpha = .7) +
  facet_wrap(~temporada, ncol = 1, labeller = as_labeller(names)) +
  labs(x = 'Meses',
       y = 'Temperatura media (°C/dia)',
       color = 'Sitio') +
  scale_x_date(labels = scales::date_format("%b"),
               date_breaks = "1 month",
               expand = c(0.05, 0.05)) +
  scale_color_manual(values = c('royalblue4', 'red3'), 
                     labels = c('La Esperanza', 'Rio Claro')) + 
  theme_bw() +
  theme(text = element_text(size = 18),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)),
        strip.background = element_rect(fill = 'white'),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_line(linetype = "dashed"))
```

#### Humedad Relativa

```{r}
#| label: fig-rh
#| fig-cap: 'Variación de la humedad relativa media diaria (%) del medio día en La Esperanza y Río Claro durante las temporadas 2022-2023 y 2023-2024.'
#| fig-width: 11.5
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_clima |>
  ggplot(aes(fecha, rh_media, color = sitio)) +
  geom_line(linewidth = .8, alpha = .7) +
  facet_wrap(~temporada, ncol = 1, labeller = as_labeller(names)) +
  labs(x = 'Meses',
       y = 'Humedad relativa media (%)',
       color = 'Sitio') +
  scale_x_date(labels = scales::date_format("%b"),
               date_breaks = "1 month",
               expand = c(0.05, 0.05)) +
  scale_color_manual(values = c('royalblue4', 'red3'), 
                     labels = c('La Esperanza', 'Rio Claro')) + 
  theme_bw() +
  theme(text = element_text(size = 18),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)),
        strip.background = element_rect(fill = 'white'),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_line(linetype = "dashed"))
```

#### Déficit de presión de vapor (VPD)

```{r}
#| label: fig-vpd
#| fig-cap: 'Variación del VPD medio (mbar/dia) del medio día en La Esperanza y Río Claro durante las temporadas 2022-2023 y 2023-2024.'
#| fig-width: 11.5
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_clima |>
  ggplot(aes(fecha,vpd_medio,color = sitio)) +
  geom_line(linewidth = .8, alpha = .7) +
  scale_x_date(labels = scales::date_format("%b"),
               date_breaks = "1 month",
               expand = c(0.05, 0.05)) +
  facet_wrap(~temporada, ncol = 1, labeller = as_labeller(names)) +
  labs(x = 'Meses',
       y = 'VPD medio (mbar/dia)',
       color = 'Sitio') +
  scale_color_manual(values = c('royalblue4', 'red3'), 
                     labels = c('La Esperanza', 'Rio Claro')) + 
  theme_bw() +
  theme(text = element_text(size = 18),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)),
        strip.background = element_rect(fill = 'white'),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_line(linetype = "dashed"))
```

#### Evapotranspiración de referencia (ET0)

```{r}
#| label: fig-eto
#| fig-cap: 'Variación de la evapotranspiración de referencia acumulada mensual (mm) en La Esperanza y Río Claro durante las temporadas 2022-2023 y 2023-2024.'
#| fig-width: 11.5
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_clima |> 
  group_by(sitio,temporada, mes = month(fecha)) |> 
  reframe(eto_mes = sum(eto,na.rm=T)) |> 
  mutate(mes = factor(mes,levels = c(7:12,1:6))) |> 
  ggplot(aes(mes,eto_mes,fill = sitio)) +
  geom_bar(stat='identity',position = 'dodge') +
  facet_wrap(~temporada, ncol = 1, labeller = as_labeller(names)) +
  scale_x_discrete(labels = c('1' = 'Ene', '2' = 'Feb', '3' = 'Mar', '4' = 'Abr', 
           '10' = 'Oct', '11' = 'Nov', '12' =' Dic')) +
  labs(x = 'Meses',
       y = 'ET0 acumulada (mm/mes)',
       fill = 'Sitio') +
  scale_fill_manual(values = c('royalblue4', 'red3'), 
                     labels = c('La Esperanza', 'Rio Claro')) + 
  theme_bw() +
  theme(text = element_text(size = 18),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)),
        strip.background = element_rect(fill = 'white'),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_line(linetype = "dashed"))

```

#### Precipitación

```{r}
#| label: fig-pp
#| fig-cap: 'Variación de la precipitación acumulada mensual (mm) en La Esperanza y Río Claro durante las temporadas 2022-2023 y 2023-2024.'
#| fig-width: 11.5
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_clima |> 
  group_by(sitio,temporada, mes = month(fecha)) |> 
  reframe(pp_mes = sum(pp,na.rm=T)) |> 
  mutate(mes = factor(mes,levels = c(7:12,1:6))) |>
  ggplot(aes(mes,pp_mes,fill = sitio)) +
  geom_bar(stat='identity',position = 'dodge') +
  facet_wrap(~temporada, ncol = 1, labeller = as_labeller(names)) +
  scale_x_discrete(labels = c('1' = 'Ene', '2' = 'Feb', '3' = 'Mar', '4' = 'Abr', 
           '10' = 'Oct', '11' = 'Nov', '12' =' Dic')) +
  labs(x = 'Meses', y = 'PP acumulada (mm/mes)', fill = 'Sitio') +
  scale_fill_manual(values = c('royalblue4', 'red3'), 
                     labels = c('La Esperanza', 'Rio Claro')) + 
  theme_bw() + 
  theme(text = element_text(size = 18), 
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)),
        strip.background = element_rect(fill = 'white'),
        panel.grid.minor.x = element_blank(), panel.grid.major.x = element_line(linetype = "dashed"))
```
:::

Además de las variables meteorológicas, también se recopilaron datos de humedad del suelo. Para esto, se utilizaron sensores de humedad del suelo Water Scout SM100 (Spectrum Technologies, Inc.), los cuales miden en tiempo real el contenido volumétrico de agua (VWC). Estos sensores se instalaron a 15 cm de profundidad bajo cada árbol de los tratamientos.

```{r, results = 'hide'}
data_sm <- read_rds('data/zim_sm.rds') |>
  filter(hora %in% 12:14) |> 
  group_by(sitio,temporada,fecha,tratamiento,unidad,sensor) |> 
  reframe(sm = mean(sm,na.rm=T)) |> 
  mutate(fecha = as.Date(fecha))
```

::: panel-tabset
#### Temporada 2022-2023

```{r}
#| label: fig-sm2022
#| fig-cap: 'Variación de la humedad de suelo media (%VWC) al medio día en La Esperanza y Río Claro en los distintos tratamientos durante la temporada 2022-2023.'
#| fig-width: 11.5
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_sm |>
  filter(temporada == '2022-2023') |>
  ggplot(aes(fecha,sm,color = unidad)) +
  geom_line(linewidth = .8, alpha = .7) +
  ylim(0,60) +
  scale_x_date(labels = scales::date_format("%b"),
               date_breaks = "1 month",
               expand = c(0.05, 0.05)) +
  facet_grid(tratamiento~sitio, labeller = as_labeller(names)) +
  labs(x = "Meses", y = 'Humedad de suelo (%VWC)') +
  scale_color_viridis_d(option = "viridis") +
  theme_bw() +
  theme(legend.position = "right",
        text = element_text(size = 14),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)),
        strip.background = element_rect(fill = 'white'),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_line(linetype = "dashed"))
```

#### Temporada 2023-2024

```{r}
#| label: fig-sm2023
#| fig-cap: 'Variación de la humedad de suelo media (%VWC) al medio día en La Esperanza y Río Claro en los distintos tratamientos durante la temporada 2023-2024.'
#| fig-width: 11.5
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_sm |>
  filter(temporada == '2023-2024') |>
  ggplot(aes(fecha,sm,color = unidad)) +
  geom_line(linewidth = .8, alpha = .7) +
  ylim(0,60) +
  scale_x_date(labels = scales::date_format("%b"),
               date_breaks = "1 month",
               expand = c(0.05, 0.05)) +
  facet_grid(tratamiento~sitio, labeller = as_labeller(names)) +
  labs(x = "Meses", y = 'Humedad de suelo (%VWC)') +
  scale_color_viridis_d(option = "viridis") +
  theme_bw() +
  theme(legend.position = "right",
        text = element_text(size = 14),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)),
        strip.background = element_rect(fill = 'white'),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_line(linetype = "dashed"))
```
:::
:::::

### Datos de teledetección y IVs {.unnumbered}

::: justify
Para obtener variabilidad espacial en el modelamiento de $\Psi_s$, se utilizó información satelital a partir del satélite Sentinel-2 (S2). La misión S2 consta de dos satélites idénticos, S2A y S2B, ambos equipados con un sensor multiespectral que cuenta con 13 bandas espectrales que cubren las regiones visible, infrarrojo cercano e infrarrojo de onda corta, con resoluciones espaciales de 10, 20 y 60 m (ver Tabla S2). En este estudio, utilizamos un total de 106 imágenes S2 (A/B): 54 para la temporada 2022-2023 y 52 para la 2023-2024, capturadas entre octubre y mayo en ambos huertos (cuadrícula T19HCB para La Esperanza y T19HBB para Río Claro). Las imágenes se obtuvieron de la colección corregida atmosféricamente S2 Level-2A de Planetary Computer [@microsoft2022], con una frecuencia de 5 días y aproximadamente a las 14:30 hora local (UTC-4). Una máscara fue aplicada basandose en la capa de clasificación de escena (SCL) para los valores correspondientes a “Cloud Shadows,” “Cloud Medium Probability,” y “Cloud High Probability,”.

A partir de estos datos de S2, se derivaron dieciséis índices de vegetación (IVs) relacionados con la condición de las plantas vigor, estrés, funcionalidad fotosintética y contenido hídrico. De estos, nueve índices no incorporaron información del red-edge (borde rojo), calculándose exclusivamente con bandas espectrales del visible, infrarrojo cercano (NIR) e infrarrojo de onda corta (SWIR): NDVI, EVI, GCI, NDWI, NBR, NDMI, MSI, NMDI y DWSI. Por otro lado, siete índices —CLr, Clg, NDRE1, NDRE2, NDCI, mSR705 y RESI— se obtuvieron mediante las bandas del red-edge. Todos los índices fueron calculados a partir de las imágenes preprocesadas de las bandas de S2, generándose series temporales para cada IV en ambos huertos y temporadas.

Para reconstruir las series temporales (ej. en zonas afectadas por nubosidad), se aplicó un suavizado mediante regresión polinomial local (LOESS) [@cleveland1979]. El método LOESS se configuró con un parámetro de suavizado (span) de 0.3, obteniéndose así series diarias continuas y suavizadas para cada índice, las cuales posteriormente fueron extraídas para cada árbol medido. Se llevó a cabo un análisis de correlación para evaluar la relación entre estas series suavizadas y los valores observados de $\Psi_s$. El coeficiente de correlación de Pearson ($r$) fue calculado diariamente para cada árbol, huerto y temporada, utilizando exclusivamente correlaciones significativas (*p-value* \< 0.05) para el cálculo de los valores promedio.
:::

## Modelos de machine learning

::: justify
Para modelar el $\Psi_s$, se evaluaron tres algoritmos de machine learning:

-   **Extreme Gradient Boosting** (XGBoost; @chen2016)
-   **Random Forest**(RF; @ho1995)
-   **Support vector Machine** (SVM; @cortes1995)

Los dos primeros métodos se basan en árboles de decisión, mientras que el tercero utiliza vectores de soporte. Estos modelos fueron seleccionados por ser considerados de vanguardia, requerir un número reducido de muestras de entrenamiento (en comparación con redes neuronales) y ofrecer interpretabilidad. Todos los algoritmos pueden emplearse tanto para clasificación como para regresión. En este estudio, se realizó un análisis de regresión, utilizando el $\Psi_s$ como variable respuesta y 21 predictores: cinco meteorológicos y 16 índices de vegetación (IVs).

El conjunto de datos incluyó mediciones de 26 fechas en la temporada 2022–2023 y 34 en la 2023–2024 (total: 60 fechas). Para cada fecha, se tomaron 30 mediciones (15 por huerto: Río Claro y La Esperanza), lo que resultó en un total de 883 observaciones. El proceso de modelado siguió las siguientes etapas:

-   **Preparación y división de datos**: Segmentación del conjunto de datos en subconjuntos de entrenamiento y prueba.
-   **Optimización de hiperparámetros**: Ajuste de los parámetros de los algoritmos utilizando el conjunto de entrenamiento.
-   **Remuestreo**: Evaluación de la confiabilidad del modelo e identificación de las variables más relevantes para estimar $\Psi_s$.
-   **Validación**: Evaluación del rendimiento del modelo con métricas de desempeño.

Se entrenaron los tres modelos utilizando dos esquemas de división ([@fig-split]): uno que consideró una división aleatoria de datos de entrenamiento y prueba (*rnd_split*) y otro que utilizó fechas independientes para entrenamiento y prueba (*tme_split*). En ambos casos, se seleccionó el 75% de los datos para entrenamiento y el 25% para prueba. Se aplicaron tres tipos de preprocesamiento a los datos de entrenamiento: i) eliminación de predictores con valores constantes (variables de varianza cero); ii) normalización de predictores (media cero y desviación estándar uno); y iii) una versión del modelo que empleó Partial Least Squares (PLS) para reducir la dimensionalidad, utilizando las cinco componentes principales como predictores. Como resultado, se usaron modelos con predictores normalizados y otros con las componentes principales de PLS.

![Esquemas de división utilizados para agrupar los conjuntos de entrenamiento y prueba: división aleatoria (rnd_split) y división temporal independiente (tme_split).](figuras/misc/esquema_split.png){#fig-split .lightbox fig-align="center"}

Para ajustar los parámetros de los modelos (XGBoost, RF, SVM), se empleó optimización de hiperparámetros. Se definieron rangos para cada parámetro y se utilizaron cinco folds de validación cruzada para ambos esquemas de división (*rnd_split* y *tme_split*). La optimización evaluó diez combinaciones de parámetros por modelo. El rendimiento se midió con las métricas R², RMSE (root-mean-square error) y MAE (mean absolute error). Finalmente, los modelos se clasificaron según el RMSE más bajo y el R² más alto, seleccionándose aquellos con mejor desempeño.
:::

## Evaluación e importancia de los modelos

::: justify
Para evaluar el rendimiento de los modelos, se aplicó remuestreo (resampling) sobre el conjunto de entrenamiento en ambos esquemas de división (*rnd_split* y *tme_split*). Se utilizaron cinco particiones y se calcularon las métricas R², MAE (Error Absoluto Medio) y RMSE (Raíz del Error Cuadrático Medio) para cada una de estas.

En cuanto a la importancia de variables, el modelo de Bosques Aleatorios (RF) empleó un método de permutación *out-of-bag* en cada árbol, permutando los predictores y calculando el error cuadrático medio para cada instancia. Para XGBoost, se estimó la contribución fraccional de cada variable según la ganancia total en las divisiones donde participó. En el caso de SVM, se calcularon puntuaciones de importancia basadas en permutaciones (para más detalles, véase @greenwell2020).
:::
