# Parámetros fisiológicos

```{r}
source('C:/Hemera/garces/reporte/book/paquetes.R')
```

## Fluorescencia

Los datos de fluorescencia han sido recopilados mediante el uso de fluorómetro FluorPen (FUENTE), entre 13:00 y 14:00 de forma semanal, en ambos sitios para la temporada 2022-2023 y 2023-2024.

El índice utilizado es el Rendimiento Cuántico Máximo del Fotosistema II (ΦP0).

::: panel-tabset
# Distribución

```{r}
#| fig-width: 10
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_fluo <- read_rds('C:/Hemera/garces/data/data_processed/fluorescencia.rds')

fluo_info <- data_fluo |>
  select(sitio,temporada,tratamiento,unidad,codigo) |>
  distinct() |>
  arrange(temporada,sitio,tratamiento,unidad)

data_fluo |> 
  ggplot(aes(unidad,Phi_Po, fill = sitio)) +
  geom_boxplot(alpha = .7) +
  geom_text(data = fluo_info, aes(unidad,1,label = codigo),size=3) +
  facet_grid(temporada+sitio~tratamiento, labeller = as_labeller(names)) +
  labs(y = expression(Phi[P0]),
       x = 'Unidad') +
  theme_light() +
  theme(legend.position = "none",
        text = element_text(size = 12),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Serie temporal

```{r}
#| fig-width: 10
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_fluo |>
  mutate(fecha = case_when(temporada == '2023-2024' ~ fecha - years(1),
                           temporada == '2022-2023' ~ fecha)) |>
  ggplot(aes(fecha,Phi_Po,color=unidad)) +
  geom_point(size=1) +
  geom_line(linewidth = .5) +
  scale_x_date(date_breaks = "2 month", date_labels = "%b",
               limits = as.Date(c("2022-10-01", "2023-05-3"))) +
  facet_grid(temporada+sitio~tratamiento, labeller = as_labeller(names)) +
    labs(y = expression(Phi[P0]),
       x = 'Meses',
       color = 'Unidad') +
  theme_light() +
  theme(text = element_text(size = 12),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Población de datos

La siguiente tabla presenta la población de datos según temporada, sitio, tratamiento y unidad.

```{r}
data_fluo |>
  group_by(temporada,sitio, tratamiento, unidad) |>
  summarise(n = sum(!is.na(`Fv/Fm`))) |>
  mutate(tratamiento = ifelse(unidad != 1,"",tratamiento),
         sitio= ifelse(tratamiento != 'T0',"",sitio),
         temporada = ifelse(sitio != 'la_esperanza',"",temporada),
         sitio = str_to_title(str_replace_all(sitio, "_", " "))) |>
  rename(Temporada = temporada,
         Sitio = sitio,
         Tratamiento = tratamiento,
         Unidad = unidad) |>
  knitr::kable()
```
:::

## Potencial

Los datos de potencial hídrico xilemático han sido recopilados mediante el uso de una camara de presión o bomba Scholander (FUENTE), entre 13:00 y 14:00 de forma semanal, en ambos sitios para la temporada 2022-2023 y 2023-2024.

::: panel-tabset
# Distribución

```{r}
#| fig-width: 10
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_potencial <- read_rds('C:/Hemera/garces/data/data_processed/potencial.rds') |>
  mutate(MPa = -potencial_bar/10)

potencial_info <- data_potencial |>
  select(sitio,temporada,tratamiento,unidad,codigo) |>
  distinct() |>
  arrange(temporada,sitio,tratamiento,unidad)

data_potencial |>
  ggplot(aes(unidad,MPa, fill = sitio)) +
  geom_boxplot(alpha = .7) +
  geom_text(data = potencial_info, aes(unidad,1,label = codigo),size=3) +
  facet_grid(temporada+sitio~tratamiento, labeller = as_labeller(names)) +
  labs(y = 'Potencial (MPa)',
       x = 'Unidad') +
  theme_light() +
  theme(legend.position = "none",
        text = element_text(size = 12),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Serie temporal

```{r}
#| fig-width: 12
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_potencial |>
  mutate(fecha = case_when(temporada == '2023-2024' ~ as.Date(fecha) - years(1),
                           temporada == '2022-2023' ~ as.Date(fecha))) |>
  ggplot(aes(fecha,MPa,color=unidad)) +
  geom_point(size=1) +
  geom_line(linewidth = .5) +
  scale_x_date(date_breaks = "2 month", date_labels = "%b",
               limits = as.Date(c("2022-10-01", "2023-03-3"))) +
  facet_grid(temporada+sitio~tratamiento, labeller = as_labeller(names)) +
    labs(y = 'Potencial (MPa)',
       x = 'Meses',
       color = 'Unidad') +
  theme_light() +
  theme(text = element_text(size = 15),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Población de datos

La siguiente tabla presenta la población de datos según temporada, sitio y tratamiento.

```{r}
data_potencial |>
  group_by(temporada,sitio,tratamiento,unidad) |>
  summarise(n = sum(!is.na(potencial_bar))) |>
  mutate(tratamiento = ifelse(unidad != 1,"",tratamiento),
         sitio= ifelse(tratamiento != 'T0',"",sitio),
         temporada = ifelse(sitio != 'la_esperanza',"",temporada),
         sitio = str_to_title(str_replace_all(sitio, "_", " "))) |>
  rename(Temporada = temporada,
         Sitio = sitio,
         Tratamiento = tratamiento,
         Unidad = unidad) |>
  knitr::kable()
```
:::

### Ciclio diario

Además del valor de potencial único diario que se recopilaba en cierto rango horario para cada unidad de muestreo, también se realizaron jornadas de recopilación de valores horarios de potencial a lo largo del día, con el fin de caracterizar el ciclo diario o perfil horario de este en las distintas unidades. Estos valores se recopilaron cada una hora desde las 8 am hasta las 8 pm, mediante la misma metodología que la extracción del valor único diario pero con menor tiempo de oscuridad y sellado en las hojas (30 a 45 min).

A continuación se muestran los resultados de la caracterización del ciclo diario del potencial.

```{r}
#| fig-width: 10
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_potencial <- read_rds('C:/Hemera/garces/data/data_processed/potencial_horario.rds')

data_potencial |>
  mutate(MPa = -bar/10,
         hora = as.numeric(substr(hora,1,2))) |>
  ggplot(aes(hora,MPa,color=unidad)) +
  geom_point() +
  geom_line() +
  facet_grid(sitio~tratamiento, labeller = as_labeller(names)) +
  theme_light() +
  scale_x_continuous(limits = c(7, 21), breaks = c(8, 12, 16, 20)) +
  labs(y = 'Potencial (MPa)',
       x = 'Hora',
       color = 'Unidad') +
  theme_light() +
  theme(text = element_text(size = 15),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))

```

## LAI

Los datos de LAI han sido recopilados mediante el uso de ceptometro LP80 (FUENTE), entre 12:30 y 13:30 de forma semanal, en ambos sitios para la temporada 2022-2023 y 2023-2024.

::: panel-tabset
# Distribución

```{r}
#| fig-width: 10
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_lai <- read_rds('C:/Hemera/garces/data/data_processed/ceptometro.rds') |>
  mutate(tratamiento = as.factor(tratamiento))

data_lai |>
  ggplot(aes(tratamiento,lai, fill = sitio)) +
  geom_boxplot(alpha = .7) +
  facet_grid(~temporada+sitio, labeller = as_labeller(names)) +
  labs(y = 'LAI',
       x = 'Unidad') +
  theme_light() +
  theme(legend.position = "none",
        text = element_text(size = 15),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Serie temporal

```{r}
#| fig-width: 13
#| fig-height: 5
#| fig-align: center
#| lightbox: true

data_lai |>
  mutate(fecha = case_when(temporada == '2023-2024' ~ fecha - years(1),
                           temporada == '2022-2023' ~ fecha)) |>
  ggplot(aes(fecha,lai,color=tratamiento)) +
  geom_point(size=1) +
  geom_line(linewidth = .5) +
  scale_x_date(date_breaks = "2 month", date_labels = "%b",
               limits = as.Date(c("2022-10-01", "2023-03-3"))) +
  facet_grid(~temporada+sitio, labeller = as_labeller(names)) +
    labs(y = 'LAI',
       x = 'Meses',
       color = 'Unidad') +
  theme_light() +
  theme(text = element_text(size = 15),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Población de datos

La siguiente tabla presenta la población de datos según temporada, sitio y tratamiento.

```{r}
data_lai |>
  group_by(temporada,sitio,tratamiento) |>
  summarise(n = sum(!is.na(lai))) |>
  mutate(sitio= ifelse(tratamiento != 'T0',"",sitio),
         temporada = ifelse(sitio != 'la_esperanza',"",temporada),
         sitio = str_to_title(str_replace_all(sitio, "_", " "))) |>
  rename(Temporada = temporada,
         Sitio = sitio,
         Tratamiento = tratamiento) |>
  knitr::kable()
```
:::

## Turgor: presión de parche {#sec-turgor}

Los datos de turgor han sido recopilados mediante el uso de sensores ZIM (FUENTE), los cuales miden presión de parche en una determinada hoja cada media hora de forma continua. Estos fueron dispuestos en cada unidad de los tratamientos (dos sensores por unidad), en ambos sitios durante la temporada 2022-2023 y 2023-2024.

En estos datos se observó presencia de ruido, atribuida a factores como la marchitez de las hojas muestreadas, fuerzas externas que provocaban el desalineamiento de los imanes del sensor y otras causas que llevaron a la recalibración de los sensores. Como resultado, se presentan a continuación tanto los datos crudos, con el ruido presente, como los datos preprocesados limpios, los cuales han sido depurados de dicho ruido.

::: panel-tabset
# Distribución

```{r}
#| fig-width: 10
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_turgor <- read_rds('C:/Hemera/garces/data/data_processed/turgor.rds')

turgor_info <- data_turgor |>
  select(sitio,temporada,tratamiento,unidad,codigo) |>
  distinct() |>
  arrange(temporada,sitio,tratamiento,unidad)

data_turgor |> 
  ggplot(aes(unidad,turgor, fill = sitio)) +
  geom_boxplot(alpha = .7) +
  geom_text(data = turgor_info, aes(unidad,350,label = codigo),size=3) +
  facet_grid(temporada+sitio~tratamiento, labeller = as_labeller(names)) +
  labs(y = expression("P"[p]*" (bar)"),
       x = 'Unidad') +
  theme_light() +
  theme(legend.position = "none",
        text = element_text(size = 12),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Serie temporal 2022-2023

```{r}
#| fig-width: 13
#| fig-height: 10
#| fig-align: center
#| lightbox: true

data_turgor |>
  filter(temporada == '2022-2023') |>
  mutate(fecha_hora = as.POSIXct(paste0(fecha,' ',hora,':00'), 
                                 format = "%Y-%m-%d %H:%M")) |>
  ggplot(aes(fecha_hora,turgor,color=zim)) +
  geom_point(size = .1) +
  scale_x_datetime(date_breaks = "2 month", date_labels = "%b",
               limits = as.POSIXct(c("2022-10-01", "2023-04-3"))) +
  facet_grid(tratamiento+unidad~sitio, labeller = as_labeller(names)) +
  labs(x = "Meses", y = expression("P"[p]*" (bar)"),
       color = 'Zim') +
  theme_light() +
  theme(text = element_text(size = 13),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17))) +
  guides(colour = guide_legend(override.aes = list(size=4)))
```

# Serie temporal 2023-2024

```{r}
#| fig-width: 13
#| fig-height: 10
#| fig-align: center
#| lightbox: true

data_turgor |>
  filter(temporada == '2023-2024') |>
  mutate(fecha_hora = as.POSIXct(paste0(fecha,' ',hora,':00'), 
                                 format = "%Y-%m-%d %H:%M")) |>
  ggplot(aes(fecha_hora,turgor,color=zim)) +
  geom_point(size = .1) +
  scale_x_datetime(date_breaks = "2 month", date_labels = "%b",
               limits = as.POSIXct(c("2023-10-01", "2024-04-3"))) +
  facet_grid(tratamiento+unidad~sitio, labeller = as_labeller(names)) +
  labs(x = "Meses", y = expression("P"[p]*" (bar)"),
       color = 'Zim') +
  theme_light() +
  theme(text = element_text(size = 13),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17))) +
  guides(colour = guide_legend(override.aes = list(size=4)))
```

# Ciclo diario 2022-2023

```{r}
#| fig-width: 13
#| fig-height: 10
#| fig-align: center
#| lightbox: true

data_turgor |> 
  filter(temporada == '2022-2023') |>
  group_by(sensor) |>
  drop_na() |> 
  mutate(turgor_sc = scale(turgor)) |> 
  ungroup() |> 
  group_by(sitio,tratamiento,unidad,hora) |> 
  summarize(turgor_hora = mean(turgor_sc,na.rm = T)) |> 
  ungroup() |> 
  mutate(hora = as.numeric(substr(hora,1,2))) |> 
  ggplot(aes(hora,turgor_hora,color=unidad,group=unidad)) +
  geom_line() +
  labs(x = 'Hora',
       y = expression("P"[p]*" (std)")) +
  facet_grid(tratamiento+unidad~sitio, labeller = as_labeller(names)) +
  theme_light() +
  scale_x_continuous(limits = c(0, 23), breaks = c(0, 6, 12, 18, 23)) +
  theme(text = element_text(size = 13),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17))) +
  guides(colour = guide_legend(override.aes = list(size=7)))
```

# Ciclo diario 2023-2024

```{r}
#| fig-width: 13
#| fig-height: 10
#| fig-align: center
#| lightbox: true

data_turgor |> 
  filter(temporada == '2023-2024') |>
  group_by(sensor) |>
  drop_na() |> 
  mutate(turgor_sc = scale(turgor)) |> 
  ungroup() |> 
  group_by(sitio,tratamiento,unidad,hora) |> 
  summarize(turgor_hora = mean(turgor_sc,na.rm = T)) |> 
  ungroup() |> 
  mutate(hora = as.numeric(substr(hora,1,2))) |> 
  ggplot(aes(hora,turgor_hora,color=unidad,group=unidad)) +
  geom_line() +
  labs(x = 'Hora',
       y = expression("P"[p]*" (std)")) +
  facet_grid(tratamiento+unidad~sitio, labeller = as_labeller(names)) +
  theme_light() +
  scale_x_continuous(limits = c(0, 23), breaks = c(0, 6, 12, 18, 23)) +
  theme(text = element_text(size = 13),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17))) +
  guides(colour = guide_legend(override.aes = list(size=7)))
```

# Población de datos

La siguiente tabla presenta la población de datos según temporada, sitio y tratamiento.

```{r}
data_turgor |>
  group_by(temporada,sitio,tratamiento,unidad,zim) |>
  summarise(n = sum(!is.na(turgor))) |>
  mutate(unidad = as.character(unidad),
         unidad = ifelse(zim != 'Z1','',unidad),
         tratamiento = ifelse(unidad != 1,"",tratamiento),
         sitio= ifelse(tratamiento != 'T1',"",sitio),
         temporada = ifelse(sitio != 'la_esperanza',"",temporada),
         sitio = str_to_title(str_replace_all(sitio, "_", " "))) |>
  rename(Temporada = temporada,
         Sitio = sitio,
         Tratamiento = tratamiento,
         Unidad = unidad) |>
  knitr::kable()
```
:::
